[{"/home/rootkit/app-ges-user/Client/src/index.tsx":"1","/home/rootkit/app-ges-user/Client/src/reportWebVitals.ts":"2","/home/rootkit/app-ges-user/Client/src/App.tsx":"3","/home/rootkit/app-ges-user/Client/src/store/index.tsx":"4","/home/rootkit/app-ges-user/Client/src/store/app/user/index.tsx":"5"},{"size":681,"mtime":1679579825169,"results":"6","hashOfConfig":"7"},{"size":425,"mtime":1679564557689,"results":"8","hashOfConfig":"7"},{"size":117,"mtime":1679570183559,"results":"9","hashOfConfig":"7"},{"size":373,"mtime":1680515538936,"results":"10","hashOfConfig":"7"},{"size":1145,"mtime":1680174049948,"results":"11","hashOfConfig":"7"},{"filePath":"12","messages":"13","suppressedMessages":"14","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"j6rj7w",{"filePath":"15","messages":"16","suppressedMessages":"17","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"18","messages":"19","suppressedMessages":"20","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"21","messages":"22","suppressedMessages":"23","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"24","messages":"25","suppressedMessages":"26","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"27"},"/home/rootkit/app-ges-user/Client/src/index.tsx",[],[],"/home/rootkit/app-ges-user/Client/src/reportWebVitals.ts",[],[],"/home/rootkit/app-ges-user/Client/src/App.tsx",[],[],"/home/rootkit/app-ges-user/Client/src/store/index.tsx",[],[],"/home/rootkit/app-ges-user/Client/src/store/app/user/index.tsx",["28","29"],[],"import { createSlice, createAsyncThunk } from \"@reduxjs/toolkit\";\nimport { Dispatch } from \"@reduxjs/toolkit\";\nimport axios from \"axios\";\n\nexport interface userType {\n    name: string;\n    email: string;\n    password: string;\n}\n\n// interface Redux {\n//     getState: any;\n//     dispatch: Dispatch<any>;\n// }\n\ninterface postResponseType {\n    data: userType;\n    message: string;\n}\n\ninterface InitialState {\n    users: userType[];\n    user: userType | null;\n    loading: boolean;\n}\n\nconst initialState: InitialState = {\n    users: [],\n    user: null ,\n    loading: true\n}\n\n\nexport const getAllUsers = createAsyncThunk(\n    'appUsers/getAllUsers',\n    async () => {\n      const { data } = await axios.get<userType[]>(\n        'api/users'\n      );\n      console.log('user', data)\n      return data;\n    }\n  );\n\n\n\nexport const appUserSlice = createSlice({\n    name: 'appUsers',\n    initialState,\n    reducers: {},\n    extraReducers: (builder) => {\n\n      builder.addCase(getAllUsers.fulfilled, (state, action) => {\n        state.users = action.payload;\n        state.loading = false;\n      });\n\n    },\n  });\n  \nexport default appUserSlice.reducer\n\n",{"ruleId":"30","severity":1,"message":"31","line":2,"column":10,"nodeType":"32","messageId":"33","endLine":2,"endColumn":18},{"ruleId":"30","severity":1,"message":"34","line":16,"column":11,"nodeType":"32","messageId":"33","endLine":16,"endColumn":27},"@typescript-eslint/no-unused-vars","'Dispatch' is defined but never used.","Identifier","unusedVar","'postResponseType' is defined but never used."]