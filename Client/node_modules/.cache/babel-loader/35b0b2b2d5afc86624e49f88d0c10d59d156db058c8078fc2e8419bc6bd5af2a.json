{"ast":null,"code":"import axios from 'axios';\nconst axiosConfig = axios.create({\n  baseURL: 'http://localhost:8080',\n  headers: {\n    Accept: 'application/json',\n    'Content-Type': 'application/json'\n  }\n});\naxiosConfig.interceptors.request.use(config => {\n  if (typeof window !== 'undefined') {\n    const token = localStorage.getItem('token');\n    if (token) {\n      config.headers.Authorization = `Basic ${token}`;\n    }\n    return config;\n  }\n}, error => Promise.reject(error));\nexport default axiosConfig;","map":{"version":3,"names":["axios","axiosConfig","create","baseURL","headers","Accept","interceptors","request","use","config","window","token","localStorage","getItem","Authorization","error","Promise","reject"],"sources":["/home/rootkit/app-ges-user/src/utils/config.tsx"],"sourcesContent":["import axios from 'axios'\n\nconst axiosConfig = axios.create({\n    baseURL: 'http://localhost:8080',\n    headers: {\n        Accept: 'application/json',\n        'Content-Type': 'application/json'\n    }\n})\naxiosConfig.interceptors.request.use(\n    (config: any) => {\n      if (typeof window !== 'undefined') {\n        const token = localStorage.getItem('token');\n        if (token) {\n          config.headers.Authorization = `Basic ${token}`;\n        }\n        return config;\n      }\n    },\n    (error) => Promise.reject(error)\n);\n\nexport default axiosConfig;"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AAEzB,MAAMC,WAAW,GAAGD,KAAK,CAACE,MAAM,CAAC;EAC7BC,OAAO,EAAE,uBAAuB;EAChCC,OAAO,EAAE;IACLC,MAAM,EAAE,kBAAkB;IAC1B,cAAc,EAAE;EACpB;AACJ,CAAC,CAAC;AACFJ,WAAW,CAACK,YAAY,CAACC,OAAO,CAACC,GAAG,CAC/BC,MAAW,IAAK;EACf,IAAI,OAAOC,MAAM,KAAK,WAAW,EAAE;IACjC,MAAMC,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;IAC3C,IAAIF,KAAK,EAAE;MACTF,MAAM,CAACL,OAAO,CAACU,aAAa,GAAI,SAAQH,KAAM,EAAC;IACjD;IACA,OAAOF,MAAM;EACf;AACF,CAAC,EACAM,KAAK,IAAKC,OAAO,CAACC,MAAM,CAACF,KAAK,CAAC,CACnC;AAED,eAAed,WAAW"},"metadata":{},"sourceType":"module","externalDependencies":[]}